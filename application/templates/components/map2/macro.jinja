{# -
    What params the map need to have?
    - A height /
    - A data-module attribute
    - A data-testid attribute
    - A class
    - An id (should be random if not provided)
    - the background tiles
    - layer controls
    - a note at the bottom

    What other features should the map have?
    - zoom controls
    - layer controls
    - a note at the bottom
    - javascript should be called from within the component
#}

{%- macro map(params) %}

    {#- Set the default params #}
    {%- do params.update({'layers': params.layers|default([])}) -%}

    {#- REQUIRES: global random_int function #}

    {#- Set the height of the map #}
    {%- set height = params.height|string + "px" if params.height else "350px"  %}

    <div class="dl-map__wrapper{{ ' ' + params.wrapper_classes if params.wrapper_classes }}" style="min-height: {{ height }};">

      {% if params.enableZoomControls -%}
        <div class="zoom-controls" data-module="zoom-controls-{{ params.mapId if params.mapId else 'map' }}">
            <button class="zoom-controls__btn" data-zoom-control="in">
              <span class="govuk-visually-hidden">Zoom in</span>
              <span>+</span>
            </button>
            {% if params.enableZoomCounter %}
            <span class="zoom-controls__count-container" aria-live="polite">
              <span class="govuk-visually-hidden">The map is at zoom level </span>
              <span class="zoom-controls__count">6</span>
            </span>
            {% endif %}
            <button class="zoom-controls__btn" data-zoom-control="out">
              <span class="govuk-visually-hidden">Zoom out</span>
              <span>-</span>
            </button>
        </div>
      {% endif -%}

        {#- Set the map div attributes #}
        <div
            class="dl-map{{ ' ' + params.classes if params.classes }}"
            id="{{ params.mapId if params.mapId else 'map' }}"
            data-module="{{ params.dataModule if params.dataModule else 'boundary-map' }}"
            data-testid="{{ params.testid if params.testid else 'map' }}"
            {% if params.attributes -%}
                {%- for attribute, value in params.attributes.items() %} {{ attribute }}="{{ value if not value|is_list else value|join(';') }}"{% endfor %}
            {%- endif %}
        >
            <noscript>To view this map, you need to enable JavaScript.</noscript>
        </div>

      {% if params.enableLayerControls -%}
        <div class="dl-map__side-panel dl-map__side-panel--full" tabindex="-1" role="dialog" aria-hidden="false" open="true" aria-modal="true">
            <div class="dl-map__side-panel__heading">
              <h3 class="govuk-heading-s govuk-!-margin-bottom-0">Data layers</h3>
            </div>
            <div class="dl-map__side-panel__content">
              <div class="govuk-checkboxes" data-module="filter-checkboxes">
                <div class="dl-filter-group__auto-filter">
                  <label for="input-71108" class="govuk-label govuk-visually-hidden">
                Filter Show only
                </label>
                  <input id="input-71108" class="govuk-input dl-filter-group__auto-filter__input" type="text" aria-describedby="checkbox-filter-71108" aria-controls="checkboxes-71108">
                </div>
                <ul class="govuk-list govuk-!-margin-bottom-0" data-module="layer-controls-{{ params.mapId if params.mapId else 'map' }}" role="group">
                  {% for layer in params.layers %}
                    {{ layerControlItem(layer) }}
                  {% endfor %}
              </ul>
            </div>
          </div>
        </div>
      {% endif -%}

        {#- Set the loader div #}
        {% if params.loader -%}
            <div class="dl-map__loader">
                <div class="dl-map__loader-msg">
                    <div class="dl-map__spinning-loader"></div>
                    <span class="govuk-!-font-size-24 govuk-!-margin-top-6">{{ params.loader.text }}</span>
                </div>
            </div>
        {% endif -%}
    </div>
    <div class="app-c-sources-panel govuk-!-margin-bottom-4">
      {{params.notePanel|safe}}
    </div>


    <script>
      window.addEventListener('load',(e) => {
        {% if params.layers is defined %}
          {% set layers = params.pop('layers') %}
        {% endif %}
        let params = {{params|tojson}};
        const layers = {{layers|tojson}};

        params = {
          ...params,
          baseTileStyleFilePath: "/static/javascripts/base-tile.json",
          vectorSource: "{{ params.DATASETTE_TILES_URL }}/-/tiles/dataset_tiles/{z}/{x}/{y}.vector.pbf",
          datasetVectorUrl: "{{ params.DATASETTE_TILES_URL }}/-/tiles/",
          datasets: {{layers|tojson}}.map(d => d.dataset),
          vectorTileSources: {{layers|tojson}}.map(d => {
            return {
              name: d.dataset,
              vectorSource: "{{ params.DATASETTE_TILES_URL }}/-/tiles/" + d.dataset + "/{z}/{x}/{y}.vector.pbf",
              dataType: d.paint_options.type,
              styleProps: {
                colour: d.paint_options.colour,
                opacity: d.paint_options.opacity,
              }
            }
          }),
          LayerControlOptions: {
              layerURLParamName: "dataset",
          },
          mapId: "{{ params.mapId if params.mapId else 'map' }}",
          ZoomControlsOptions: {
            enabled: {{params.enableZoomControls|lower if params.enableZoomControls else 'false'}},
            useCounter: {{params.enableZoomCounter|lower if params.enableZoomCounter else 'false'}},
          },
          LayerControlOptions: {
            enabled: {{params.enableLayerControls|lower if params.enableLayerControls else 'false'}},
          },
          FullscreenControl: {
            enabled: true,
          }
        };



        window.mapControllers = window.mapControllers || {};
        // ToDo: should handle cleaning this up
        window.mapControllers["{{ params.mapId if params.mapId else 'map' }}"] = newMapController({...params, layers});
      })

    </script>

{% endmacro %}


{% macro layerControlItem(layer) %}
    <li class="dl-map__layer-item govuk-!-margin-bottom-1" data-layer-control="{{ layer.dataset }}"
    {% if layer.paint_options.type %}data-layer-type={{layer.paint_options.type}}{% endif %} data-style-options="{% if layer.paint_options %}{{ layer.paint_options.colour }},{{ layer.paint_options.opacity }}{% endif %}">
    <div class="govuk-checkboxes__item">
        <input class="govuk-checkboxes__input" id="{{ layer.dataset }}" name="{{ layer.dataset }}" type="checkbox" value="{{ layer.dataset }}" {{ "checked='checked'" if layer.checked }}>
        <label class="govuk-label govuk-checkboxes__label" for="{{ layer.dataset }}">
        <span class="dl-label__key">
            {%- if layer.paint_options.type and layer.paint_options.type == 'point' -%}
                <svg class="dl-label__key__symbol" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" xml:space="preserve" viewBox="0 0 90 90">

                  <defs>
                  </defs>
                  <g style="stroke: none; stroke-width: 0; stroke-dasharray: none; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; fill: none; fill-rule: nonzero; opacity: 1;" >
                    <path
                      d="M 45 0 C 27.677 0 13.584 14.093 13.584 31.416 c 0 4.818 1.063 9.442 3.175 13.773 c 2.905 5.831 11.409 20.208 20.412 35.428 l 4.385 7.417 C 42.275 89.252 43.585 90 45 90 s 2.725 -0.748 3.444 -1.966 l 4.382 -7.413 c 8.942 -15.116 17.392 -29.4 20.353 -35.309 c 0.027 -0.051 0.055 -0.103 0.08 -0.155 c 2.095 -4.303 3.157 -8.926 3.157 -13.741 C 76.416 14.093 62.323 0 45 0 z M 45 42.81 c -6.892 0 -12.5 -5.607 -12.5 -12.5 c 0 -6.893 5.608 -12.5 12.5 -12.5 c 6.892 0 12.5 5.608 12.5 12.5 C 57.5 37.202 51.892 42.81 45 42.81 z"
                      style="
                        stroke: none;
                        stroke-width: 1;
                        stroke-dasharray: none;
                        stroke-linecap: butt;
                        stroke-linejoin: miter;
                        stroke-miterlimit: 10;
                        fill: {{layer.paint_options.colour|default('#003078')}};
                        fill-rule: nonzero;
                        opacity: 1;"
                        transform=" matrix(1 0 0 1 0 0) "
                        stroke-linecap="round"
                      />
                  </g>
                </svg>
            {%- else -%}
              <span
                class="dl-label__key__symbol"
                style="
                  border-color: {{layer.paint_options.colour|default('#003078')}};
                  background: rgba({{layer.paint_options.colour|default('#003078')|hex_to_rgb}},{{ layer.paint_options.opacity|default('0.5') }});"
                >
              </span>
            {%- endif -%}
            {{ layer.name }}
        </span>
        </label>
    </div>
    </li>
{% endmacro %}
